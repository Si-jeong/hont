#배포 버전, for production

version: '3.7'

services:
#react 컨테이너
    client:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        tty: true
        ports:
            - "3000:3000"
        volumes: 
            - ./frontend:/app
            - /app/node_modules
        networks:
            - app-tier
   elasticsearch:
        build:
            context: elasticsearch/
            args:
                ELK_VERSION: $ELK_VERSION
        volumes:
          - type: bind
            source: ./elasticsearch/config/elasticsearch.yml
            target: /usr/share/elasticsearch/config/elasticsearch.yml
            read_only: true
          - type: volume
            source: elasticsearch
            target: /usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
            ELASTIC_PASSWORD: changeme
            # Use single node discovery in order to disable production mode and avoid bootstrap checks.
            # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
            discovery.type: single-node
        networks:
            - app-tier
    
    logstash:
        build:
            context: logstash/
            args:
                ELK_VERSION: $ELK_VERSION
        volumes:
          - type: bind
            source: ./logstash/config/logstash.yml
            target: /usr/share/logstash/config/logstash.yml
            read_only: true
          - type: bind
            source: ./logstash/pipeline
            target: /usr/share/logstash/pipeline
            read_only: true
        ports:
            - "5001:5001/tcp"
            - "5001:5001/udp"
            - "9600:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        networks:
            - app-tier
        depends_on:
            - elasticsearch
    
    kibana:
        build:
            context: kibana/
            args:
                ELK_VERSION: $ELK_VERSION
        volumes:
          - type: bind
            source: ./kibana/config/kibana.yml
            target: /usr/share/kibana/config/kibana.yml
            read_only: true
        ports:
            - "5601:5601"
        networks:
            - app-tier
        depends_on:
            - elasticsearch
            
#db 컨테이너
    mongodb:
        image: mongo
        container_name: mongo
        ports:
            - "27017:27017"
        restart: unless-stopped
        command: mongod --auth
        env_file:
            - ./settings/prod/.env.db
        volumes:
            - mongodbdata:/data/db
        networks:
            - app-tier
#flask 컨테이너
    api:
        build: 
            context: ./backend
            dockerfile: Dockerfile
        command: gunicorn -w 1 -b 0.0.0.0:5000 server:app --reload
        ports:
            - "5000:5000"
        volumes:
            - appdata:/var/www/
        links:
            - mongodb:mongodb   
        depends_on: 
            - mongodb
        env_file:
            - ./settings/prod/.env.prod
        networks:
            - app-tier
#nginx 컨테이너
    nginx:
        image: nginx:latest
        ports:
            - "80:80"
            - "8000:8000"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - client
            - api
        networks:
            - app-tier
        restart: "on-failure"
        
#redis컨테이너     
    redis:
        image: redis:latest
        container_name: redis
        hostname: redis_dev
        
networks:
    app-tier:
        driver: bridge
volumes:
    mongodbdata:
    appdata:
    elasticsearch:
